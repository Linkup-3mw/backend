name: DockerCompose With Gradle

on:
  push:
    branches:
      - main
      - dev

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Add permission
        run: chmod +x gradlew

      - name: Clean before Build
        run: ./gradlew clean

      - name: Inject Secret values into application-test.yml
        run: |
          sed -i 's/# MYSQL_URL/url: '${{ secrets.DB_URL }}'/' src/main/resources/application-test.yml
          sed -i 's/# MYSQL_USERNAME/username: '${{ secrets.DB_USERNAME }}'/' src/main/resources/application-test.yml
          sed -i 's/# MYSQL_PASSWORD/password: '${{ secrets.DB_PASSWORD }}'/' src/main/resources/application-test.yml
        
          sed -i 's/# SMTP_EMAIL/username: '${{ secrets.SMTP_EMAIL }}'/' src/main/resources/application-test.yml
          sed -i 's/# SMTP_PASSWORD/password: '${{ secrets.SMTP_PASSWORD }}'/' src/main/resources/application-test.yml
          sed -i 's/# SMTP_HOST/host: '${{ secrets.SMTP_HOST }}'/' src/main/resources/application-test.yml
          sed -i 's/# SMTP_PORT/port: '${{ secrets.SMTP_PORT }}'/' src/main/resources/application-test.yml
                    
          sed -i 's/# REDIS_PASSWORD/password: '${{ secrets.REDIS_PASSWORD }}'/' src/main/resources/application-test.yml
          sed -i 's/# REDIS_PORT/port: '${{ secrets.REDIS_PORT }}'/' src/main/resources/application-test.yml
          
          sed -i 's/# S3_BUCKET_NAME/bucket: '${{ S3_BUCKET_NAME }}'/' src/main/resources/application-test.yml
          sed -i 's/# S3_BUCKET_ACCESS_KEY/access-key: '${{ S3_ACCESS_KEY }}'/' src/main/resources/application-test.yml
          sed -i 's/# S3_BUCKET_SECRET_KEY/secret-key: '${{ S3_SECRET_KEY }}'/' src/main/resources/application-test.yml
          sed -i 's/# S3_BUCKET_REGION/static: '${{ S3_REGION }}'/' src/main/resources/application-test.yml
          
          sed -i 's/# JWT_SECRET/secret: '${{ secrets.JWT_SECRET_KEY }}'/' src/main/resources/application-test.yml

      - name: Docker Build & Push
        run: |
          docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_REPO }}

      - name: SSH Connection & Deploy
        uses: appleboy/ssh-action@master
        env:
          APP: "docker-project"
          COMPOSE: "/home/ubuntu/compose/docker-compose.yml"
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: APP, COMPOSE
          script_stop: true
          script: |
            sudo docker-compose -f $COMPOSE down
            sudo docker pull ${{ secrets.DOCKER_REPO }}
            sudo docker-compose -f $COMPOSE up -d
